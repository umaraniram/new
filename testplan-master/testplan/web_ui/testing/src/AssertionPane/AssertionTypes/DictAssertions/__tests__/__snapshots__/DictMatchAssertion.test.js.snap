// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DictMatchAssertion shallow renders the correct HTML structure 1`] = `
<DictBaseAssertion
  buttons={
    <DictButtonGroup
      defaultSortType={3}
      flattenedDict={
        Array [
          Array [
            0,
            "bar",
            "Failed",
            Array [
              "int",
              "2",
            ],
            Array [
              "int",
              "5",
            ],
          ],
          Array [
            0,
            "extra-key",
            "Failed",
            Array [
              null,
              "ABSENT",
            ],
            Array [
              "int",
              "10",
            ],
          ],
          Array [
            0,
            "foo",
            "Passed",
            Array [
              "int",
              "1",
            ],
            Array [
              "int",
              "1",
            ],
          ],
        ]
      }
      setRowData={[Function]}
      sortTypeList={
        Array [
          1,
          2,
          3,
          4,
        ]
      }
    />
  }
  columns={
    Array [
      Object {
        "cellStyle": Object {
          "border": "1px solid",
          "borderColor": "#d9dcde",
          "fontSize": "small",
          "padding": "6px 11px 6px 11px",
        },
        "field": "key",
        "headerStyle": Object {
          "border": "1px solid",
          "borderColor": "#d9dcde",
        },
        "render": [Function],
        "title": "Key",
      },
      Object {
        "cellStyle": Object {
          "backgroundColor": "#BDC3C750",
          "border": "1px solid",
          "borderColor": "#d9dcde",
          "fontSize": "small",
          "padding": "6px 11px 6px 11px",
        },
        "field": "expected",
        "headerStyle": Object {
          "border": "1px solid",
          "borderColor": "#d9dcde",
        },
        "render": [Function],
        "title": "Expected",
      },
      Object {
        "cellStyle": Object {
          "backgroundColor": "#BDC3C750",
          "border": "1px solid",
          "borderColor": "#d9dcde",
          "fontSize": "small",
          "padding": "6px 11px 6px 11px",
        },
        "field": "value",
        "headerStyle": Object {
          "border": "1px solid",
          "borderColor": "#d9dcde",
        },
        "render": [Function],
        "title": "Value",
      },
    ]
  }
  rows={
    Array [
      Object {
        "descriptor": Object {
          "indent": 0,
          "isEmptyLine": false,
          "isListKey": false,
          "lineNo": 524,
          "status": "Failed",
        },
        "expected": Object {
          "type": "int",
          "value": "5",
        },
        "key": Object {
          "type": "key",
          "value": "bar",
        },
        "value": Object {
          "type": "int",
          "value": "2",
        },
      },
      Object {
        "descriptor": Object {
          "indent": 0,
          "isEmptyLine": false,
          "isListKey": false,
          "lineNo": 524,
          "status": "Failed",
        },
        "expected": Object {
          "type": "int",
          "value": "10",
        },
        "key": Object {
          "type": "key",
          "value": "extra-key",
        },
        "value": Object {
          "type": null,
          "value": "ABSENT",
        },
      },
      Object {
        "descriptor": Object {
          "indent": 0,
          "isEmptyLine": false,
          "isListKey": undefined,
          "lineNo": 524,
          "status": "Passed",
        },
        "expected": Object {
          "type": "int",
          "value": "1",
        },
        "key": Object {
          "type": "key",
          "value": "foo",
        },
        "value": Object {
          "type": "int",
          "value": "1",
        },
      },
    ]
  }
/>
`;
